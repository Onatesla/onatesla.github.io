{"ast":null,"code":"var _jsxFileName = \"/Users/paolofontana/react/digital-photo/src/navigate/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport emailjs from '@emailjs/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Submit = () => {\n  _s();\n\n  const [valid, setValid] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n  const form = useRef();\n  const user_email = \"paolo.uni.95@gmail.com\";\n  const [one, setOne] = useState({\n    nome: \" \",\n    email: \"paolo.uni.95@gmail.com\",\n    message: \" \",\n    emaildata: \" \"\n  }); // const [list, setList] = useState ([]);\n\n  const sendEmail = e => {\n    e.preventDefault();\n    handleValidation();\n    console.log(valid);\n    console.log(error);\n\n    if (valid === true) {\n      emailjs.sendForm('service_6ckdu5q', 'template_ddnas2b', form.currenti, 'user_COHw7BwAfI4bYoD3GOuRd').then(result => {\n        console.log(result.text);\n        alert(\"form inviato\");\n      }, error => {\n        console.log(error.text);\n      });\n    } else {\n      alert(\"manda il form completo\");\n    }\n  }; // const gestiscidati = (e) => {\n  //     e.preventDefault();\n  //     if (one.nome && one.email && one.message)\n  //     {\n  //     setList ([...list, \n  //     {\n  //         id: new Date(Date.now()).getTime().toString(),\n  //         ...one\n  //     },])\n  //     setOne ({\n  //         nome: \"\",\n  //         email: \"\",\n  //         message: \"\"\n  //     }\n\n\n  const handleValidation = () => {\n    let fields = { ...one\n    }; //Name\n\n    if (!fields[form.current.nome]) {\n      setValid(false);\n      setError(\"Cannot be empty\");\n    } //Email\n\n\n    if (!fields[form.current.emaildata]) {\n      setValid(false);\n      setError(\"Cannot be empty\");\n    }\n\n    ;\n    return valid;\n  };\n\n  const handleClick = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOne({ ...one,\n      [name]: value\n    });\n    console.log(value);\n  };\n\n  useEffect(() => {\n    const {\n      log\n    } = console;\n    log(one);\n  }, [one]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"txt formtitle\",\n          children: \"Vuoi prenotare un servizio fotografico?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"txt formdesc\",\n          children: \"Un nostro impiegato ti contatter\\xE0 in 48 ore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input\",\n        ref: form,\n        onSubmit: sendEmail,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nome\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"txt label\",\n            children: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"nome\",\n            className: \"style name\",\n            value: one.nome,\n            onChange: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"txt label\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            name: \"emaildata\",\n            value: one.emaildata,\n            onChange: handleClick,\n            className: \"style name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: user_email,\n            className: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"txt label\",\n            children: \"Messaggio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"textarea\",\n            id: \"message\",\n            name: \"message\",\n            value: one.message,\n            onChange: handleClick,\n            className: \"style messaggio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \" style submit \",\n            onClick: sendEmail,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"btn-txt\",\n              children: \"Manda form!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Submit, \"M0iRV0XK5ngDJ67uoMflsAiVRcY=\");\n\n_c = Submit;\nexport default Submit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Submit\");","map":{"version":3,"sources":["/Users/paolofontana/react/digital-photo/src/navigate/form.js"],"names":["React","useEffect","useState","useRef","emailjs","Submit","valid","setValid","error","setError","form","user_email","one","setOne","nome","email","message","emaildata","sendEmail","e","preventDefault","handleValidation","console","log","sendForm","currenti","then","result","text","alert","fields","current","handleClick","name","value","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACE,QAAN,CAAe,IAAf,CAA1B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACE,QAAN,CAAe,EAAf,CAA1B;AAEA,QAAMQ,IAAI,GAAGP,MAAM,EAAnB;AACA,QAAMQ,UAAU,GAAC,wBAAjB;AAEA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAE;AAACY,IAAAA,IAAI,EAAG,GAAR;AAChCC,IAAAA,KAAK,EAAC,wBAD0B;AACAC,IAAAA,OAAO,EAAG,GADV;AACeC,IAAAA,SAAS,EAAE;AAD1B,GAAF,CAA9B,CAPqB,CASrB;;AACA,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,gBAAgB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;;AACA,QAAIF,KAAK,KAAK,IAAd,EAAmB;AAEnBF,MAAAA,OAAO,CAACoB,QAAR,CAAiB,iBAAjB,EAAoC,kBAApC,EAAwDd,IAAI,CAACe,QAA7D,EAAuE,4BAAvE,EACGC,IADH,CACSC,MAAD,IAAY;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACC,IAAnB;AACAC,QAAAA,KAAK,CAAC,cAAD,CAAL;AACH,OAJH,EAIMrB,KAAD,IAAW;AACVc,QAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACoB,IAAlB;AACH,OANH;AAMM,KARN,MAUA;AAEIC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACH;AACJ,GAnBD,CAVqB,CA8BrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMR,gBAAgB,GAAE,MAAK;AACzB,QAAIS,MAAM,GAAG,EAAC,GAAGlB;AAAJ,KAAb,CADyB,CAGzB;;AACA,QAAI,CAACkB,MAAM,CAACpB,IAAI,CAACqB,OAAL,CAAajB,IAAd,CAAX,EAAgC;AAC9BP,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,iBAAD,CAAR;AACD,KAPwB,CASzB;;;AACA,QAAI,CAACqB,MAAM,CAACpB,IAAI,CAACqB,OAAL,CAAad,SAAd,CAAX,EAAqC;AACnCV,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC,iBAAD,CAAR;AACD;;AACD;AACA,WAAOH,KAAP;AACD,GAhBH;;AAiBA,QAAM0B,WAAW,GAAIb,CAAD,IAAO;AACvB,UAAM;AAAEc,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiBf,CAAC,CAACgB,MAAzB;AACAtB,IAAAA,MAAM,CAAC,EAAC,GAAGD,GAAJ;AAAS,OAACqB,IAAD,GAAQC;AAAjB,KAAD,CAAN;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACH,GAJD;;AAMAjC,EAAAA,SAAS,CAAE,MAAK;AACZ,UAAM;AAACsB,MAAAA;AAAD,QAAQD,OAAd;AACAC,IAAAA,GAAG,CAACX,GAAD,CAAH;AACH,GAHQ,EAGN,CAACA,GAAD,CAHM,CAAT;AAIA,sBACI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,8BACgB;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA;AAAI,UAAA,SAAS,EAAG,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAI,UAAA,SAAS,EAAE,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADhB,eAKgB;AAAM,QAAA,SAAS,EAAG,OAAlB;AAA0B,QAAA,GAAG,EAAEF,IAA/B;AAAqC,QAAA,QAAQ,EAAIQ,SAAjD;AAAA,gCACI;AAAO,UAAA,OAAO,EAAE,MAAhB;AAAA,kCACA;AAAI,YAAA,SAAS,EAAG,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAO,YAAA,IAAI,EAAG,MAAd;AAAqB,YAAA,EAAE,EAAG,MAA1B;AAAiC,YAAA,IAAI,EAAG,MAAxC;AAAgD,YAAA,SAAS,EAAG,YAA5D;AAAyE,YAAA,KAAK,EAAIN,GAAG,CAACE,IAAtF;AAA4F,YAAA,QAAQ,EAAIkB;AAAxG;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAO,UAAA,OAAO,EAAG,OAAjB;AAAA,kCACA;AAAI,YAAA,SAAS,EAAG,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAO,YAAA,IAAI,EAAG,MAAd;AAAqB,YAAA,EAAE,EAAG,OAA1B;AAAkC,YAAA,IAAI,EAAG,WAAzC;AAAqD,YAAA,KAAK,EAAIpB,GAAG,CAACK,SAAlE;AAA6E,YAAA,QAAQ,EAAIe,WAAzF;AAAsG,YAAA,SAAS,EAAG;AAAlH;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAO,YAAA,IAAI,EAAE,OAAb;AAAqB,YAAA,KAAK,EAAErB,UAA5B;AAAwC,YAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAUI;AAAO,UAAA,OAAO,EAAG,SAAjB;AAAA,kCACA;AAAI,YAAA,SAAS,EAAG,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAO,YAAA,IAAI,EAAG,UAAd;AAAyB,YAAA,EAAE,EAAG,SAA9B;AAAyC,YAAA,IAAI,EAAE,SAA/C;AAAyD,YAAA,KAAK,EAAKC,GAAG,CAACI,OAAvE;AAAgF,YAAA,QAAQ,EAAIgB,WAA5F;AAAyG,YAAA,SAAS,EAAG;AAArH;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAcI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACA;AAAQ,YAAA,IAAI,EAAG,QAAf;AAAwB,YAAA,SAAS,EAAG,gBAApC;AAAqD,YAAA,OAAO,EAAEd,SAA9D;AAAA,yCAA0E;AAAI,cAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BC,CAvGD;;GAAMb,M;;KAAAA,M;AAyGN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState,useRef } from \"react\";\nimport emailjs from '@emailjs/browser'\n\n\n\nconst Submit = () => {\nconst [valid, setValid] = React.useState(true)\nconst [error, setError] = React.useState(\"\")\n\nconst form = useRef();\nconst user_email=\"paolo.uni.95@gmail.com\";\n\nconst [one, setOne] = useState ({nome : \" \",\nemail:\"paolo.uni.95@gmail.com\", message : \" \", emaildata: \" \"});\n// const [list, setList] = useState ([]);\nconst sendEmail = (e) => {\n    e.preventDefault();\n    handleValidation()\n    console.log(valid);\n    console.log(error);\n    if (valid === true){\n    \n    emailjs.sendForm('service_6ckdu5q', 'template_ddnas2b', form.currenti, 'user_COHw7BwAfI4bYoD3GOuRd')\n      .then((result) => {\n          console.log(result.text);\n          alert(\"form inviato\")\n      }, (error) => {\n          console.log(error.text);\n      });}\n    else\n    {\n        \n        alert(\"manda il form completo\");\n    }\n}\n// const gestiscidati = (e) => {\n//     e.preventDefault();\n//     if (one.nome && one.email && one.message)\n//     {\n        \n//     setList ([...list, \n//     {\n//         id: new Date(Date.now()).getTime().toString(),\n//         ...one\n//     },])\n//     setOne ({\n//         nome: \"\",\n//         email: \"\",\n//         message: \"\"\n\n//     }\nconst handleValidation= () =>{\n    let fields = {...one};\n\n    //Name\n    if (!fields[form.current.nome]) {\n      setValid(false)\n      setError(\"Cannot be empty\")\n    }\n\n    //Email\n    if (!fields[form.current.emaildata]) {\n      setValid(false)\n      setError(\"Cannot be empty\");\n    }\n    ;\n    return valid;\n  }\nconst handleClick = (e) => {\n    const { name, value} = e.target\n    setOne({...one, [name]: value})\n    console.log(value)\n}\n\nuseEffect (()=> {\n    const {log} = console;\n    log(one);\n}, [one]);\nreturn(\n    <article className=\"form\" > \n<div className = \"container\"  >\n                <div className=\"text\">\n                <h2 className = \"txt formtitle\">Vuoi prenotare un servizio fotografico?</h2>\n                <h4 className= \"txt formdesc\">Un nostro impiegato ti contatterà in 48 ore</h4>\n                </div>\n                <form className = \"input\" ref={form} onSubmit = {sendEmail} >\n                    <label htmlFor= \"nome\">\n                    <h4 className = \"txt label\">Nome:</h4>\n                    <input type = \"text\" id = \"name\" name = \"nome\"  className = \"style name\" value = {one.nome} onChange = {handleClick} />\n                    </label>\n                    <label htmlFor = \"email\">\n                    <h4 className = \"txt label\" >Email:</h4>\n                    <input type = \"text\" id = \"email\" name = \"emaildata\" value = {one.emaildata} onChange = {handleClick} className = \"style name\"/>\n                    <input type= \"email\" value={user_email} className=\"hidden\" />\n                    </label>\n                    <label htmlFor = \"message\">\n                    <h4 className = \"txt label\">Messaggio:</h4>\n                    <input type = \"textarea\" id = \"message\"  name =\"message\" value  = {one.message} onChange = {handleClick} className = \"style messaggio\"/>\n                    </label>\n                    <div className=\"btn-container\">\n                    <button type = \"submit\" className = \" style submit \" onClick={sendEmail}> <h2 className=\"btn-txt\">Manda form!</h2></button>\n                    </div>\n                    \n                </form>\n               \n</div>\n</article>\n)\n}\n\nexport default Submit;\n                "]},"metadata":{},"sourceType":"module"}